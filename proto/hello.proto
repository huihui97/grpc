//proto文件其实是一个约束


//这是在说明我们使用的是proto3语法
syntax = "proto3";

//这部分的内容是关于最后生成的go文件是处在哪个目录哪个包中，代表在当前目录生成，service代表了生成的go文件的包名是service
option go_package =".;server";

//然后，我们需要定义一个服务，在这个服务中需要有一个方法，这个方法可以接受客户端的参数，再返回服务端响应
//其实很容易看出，我们定义一个service，称为SayHello，这个服务中有一个rpc方法，名为SayHello.
//这个方法会发送一个HelloRequest,然后返回一个HelloResponse.

//这里定义一个服务,这个服务里面有很多方法,方法需要接收请求参数
service SayHello {  //定义服务主体
  rpc SayHello(HelloRequest) returns (HelloResponse){}
}

//message关键字,其实可以理解为Golang中的结构体
//这里比较特别的是变量后面的"赋值".注意:这里并不是赋值,而是在定义这个变量在message中的位置.
//消息,要传输的对象
message HelloRequest{
  string requestName=1;  //1代表的是标识号,无特别意义, =1 可写可不写.
//  int64  age = 2;  //2也是代表标识号
}
message  HelloResponse{
  string responseMsg = 1;
}